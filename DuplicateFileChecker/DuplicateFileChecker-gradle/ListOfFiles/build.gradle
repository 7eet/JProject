/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    id 'jacoco'
	
    id "com.github.spotbugs" version "2.0.0"	
		
   // id 'checkstyle'	
}

//checkstyle{
//	toolVersion = '8.23'
//}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
ext.moduleName = 'com.dupcheck.list' 
ext.junit4Version        = '4.12'
ext.junitPlatformVersion = '1.5.1'
ext.junitJupiterVersion  = '5.5.1'

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'
    
    compile project(':Signature')
    //classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
    //compile 'com.puppycrawl.tools:checkstyle:8.23'
	//compile 'com.puppycrawl.tools:checkstyle:18.10'
  // JUnit Jupiter API and TestEngine implementation
  testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
  testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

  	testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
}



jacoco {
    toolVersion = "0.8.4"
 reportsDir = file("$buildDir/customJacocoReportDir")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
    useJUnitPlatform{
    	includeEngines 'junit-jupiter'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}



